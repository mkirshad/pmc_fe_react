import{a2 as l,a3 as f,A as d}from"./index-cL3niTbb.js";const g=l()(f((r,i)=>({reports:[],loading:!1,error:null,fetchReports:async()=>{i().reports.some(o=>o.syncStatus)&&console.warn("Skipping fetch: Unsynced data exists"),r({loading:!0,error:null});try{if(navigator.onLine){const o=await d.get("/pmc/inspection-report/");r({reports:o.data})}}catch(o){console.error("Error fetching reports:",o),r({error:"Failed to fetch reports"})}finally{r({loading:!1})}},updateReport:(s,o)=>{console.log("its in update state"),console.log(s),console.log(o),r(t=>({reports:t.reports.map(e=>e.id==s?{...e,...o,syncStatus:"patch"}:e)}))},addNewReport:s=>{const o=`temp-${Date.now()}`;r(t=>({reports:[...t.reports,{...s,id:o,syncStatus:"post"}]}))},syncReports:async()=>{console.log("Syncing reports...");const{reports:s}=i(),o=s.filter(t=>t.syncStatus);if(o.length===0){console.log("No unsynced reports. Fetching fresh data..."),i().fetchReports();return}for(const t of o)try{let e,c=t,p={"Content-Type":"application/json"};if(t.affidavit){const a=new FormData;Object.keys(t).forEach(n=>{n==="affidavit"&&t.affidavit instanceof File?a.append(n,t.affidavit):t[n]!==void 0&&a.append(n,String(t[n]))}),c=a,p={"Content-Type":"multipart/form-data"}}t.syncStatus==="post"||String(t.id).startsWith("temp-")?navigator.onLine&&(e=await d.post("/pmc/inspection-report/",c,{headers:p}),t.id=e.data.id):t.syncStatus==="patch"&&navigator.onLine&&(e=await d.patch(`/pmc/inspection-report/${t.id}/`,c,{headers:p})),console.log("[✅ Synced]:",e==null?void 0:e.status,t.id),navigator.onLine&&r(a=>({reports:a.reports.map(n=>n.id===t.id?{...n,syncStatus:void 0}:n)}))}catch(e){console.error("[❌ Sync Failed]:",t.id,e)}},resetReports:()=>r({reports:[]})}),{name:"inspection-reports",getStorage:()=>localStorage}));typeof window<"u"&&window.addEventListener("online",async()=>{console.log("[🔄 Online] Syncing stored reports..."),g.getState().syncReports()});export{g as u};
