import{a3 as g,a4 as y,A as l}from"./index-iLEOAKLB.js";const h=g()(y((r,c)=>({reports:[],loading:!1,error:null,fetchReports:async()=>{c().reports.some(e=>e.syncStatus)&&console.warn("Skipping fetch: Unsynced data exists"),r({loading:!0,error:null});try{if(navigator.onLine){const e=await l.get("/pmc/inspection-report/");r({reports:e.data})}}catch(e){console.error("Error fetching reports:",e),r({error:"Failed to fetch reports"})}finally{r({loading:!1})}},updateReport:(a,e)=>{console.log("its in update state"),console.log(a),console.log(e),r(t=>({reports:t.reports.map(o=>o.id==a?{...o,...e,syncStatus:"patch"}:o)}))},addNewReport:a=>{const e=`temp-${Date.now()}`;r(t=>({reports:[...t.reports,{...a,id:e,syncStatus:"post"}]}))},syncReports:async()=>{console.log("Syncing reports...");const{reports:a}=c(),e=a.filter(t=>t.syncStatus);if(e.length===0){console.log("No unsynced reports. Fetching fresh data..."),c().fetchReports();return}for(const t of e)try{let o,p=t,d={"Content-Type":"application/json"};if(t.affidavit||t.confiscation_receipt||t.payment_challan){const i=new FormData;Object.entries(t).forEach(([n,s])=>{if(s instanceof File)i.append(n,s);else if(["violation_found","violation_type","action_taken","confiscation_other_plastics","other_single_use_items","fine_recovery_breakup"].includes(n))i.append(n,JSON.stringify(s||[]));else if(["fine_recovery_date","de_sealed_date"].includes(n)){const f=s?String(s).split("T")[0]:"";i.append(n,f)}else s!=null&&i.append(n,String(s))}),p=i,d={"Content-Type":"multipart/form-data"}}t.syncStatus==="post"||String(t.id).startsWith("temp-")?navigator.onLine&&(o=await l.post("/pmc/inspection-report/",p,{headers:d}),t.id=o.data.id):t.syncStatus==="patch"&&navigator.onLine&&(o=await l.patch(`/pmc/inspection-report/${t.id}/`,p,{headers:d})),console.log("[✅ Synced]:",o==null?void 0:o.status,t.id),navigator.onLine&&r(i=>({reports:i.reports.map(n=>n.id===t.id?{...n,syncStatus:void 0}:n)}))}catch(o){console.error("[❌ Sync Failed]:",t.id,o)}},resetReports:()=>r({reports:[]})}),{name:"inspection-reports",getStorage:()=>localStorage}));typeof window<"u"&&window.addEventListener("online",async()=>{console.log("[🔄 Online] Syncing stored reports..."),h.getState().syncReports()});export{h as u};
