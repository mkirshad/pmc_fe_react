import{a3 as d,a4 as l,A as c}from"./index-BoH5IUwZ.js";const p=d()(l((s,n)=>({reports:[],loading:!1,error:null,fetchReports:async()=>{n().reports.some(e=>e.syncStatus)&&(console.warn("Skipping fetch: Unsynced data exists"),p.getState().syncReports()),s({loading:!0,error:null});try{const e=await c.get("/pmc/inspection-report/");s({reports:e.data})}catch(e){console.error("Error fetching reports:",e),s({error:"Failed to fetch reports"})}finally{s({loading:!1})}},updateReport:(r,e)=>{console.log("its in update state"),s(t=>({reports:t.reports.map(o=>o.id===r?{...o,...e,syncStatus:"patch"}:o)})),p.getState().syncReports()},addNewReport:r=>{const e=`temp-${Date.now()}`;s(t=>({reports:[...t.reports,{...r,id:e,syncStatus:"post"}]}))},syncReports:async()=>{const{reports:r}=n(),e=r.filter(t=>t.syncStatus);if(e.length===0){console.log("No unsynced reports. Fetching fresh data...");return}for(const t of e)try{let o;t.syncStatus==="post"?(o=await c.post("/pmc/inspection-report/",t),t.id=o.data.id):t.syncStatus==="patch"&&(o=await c.patch(`/pmc/inspection-report/${t.id}/`,t)),console.log("[✅ Synced]:",o.status,t.id),s(i=>({reports:i.reports.map(a=>a.id===t.id?{...a,syncStatus:void 0}:a)}))}catch(o){console.error("[❌ Sync Failed]:",t.id,o)}n().fetchReports()},resetReports:()=>s({reports:[]})}),{name:"inspection-reports",getStorage:()=>localStorage}));typeof window<"u"&&window.addEventListener("online",async()=>{console.log("[🔄 Online] Syncing stored reports..."),p.getState().syncReports()});export{p as u};
